{"version":3,"sources":["components/MapControls.js","components/Markers.js","components/CountryInformation.js","services/MapService.js","components/Map.js","App.js","index.js"],"names":["MapControls","style","position","top","left","margin","positionOptions","enableHighAccuracy","timeout","trackUserLocation","fitBoundsOptions","maxZoom","padding","bottom","Markers","data","onMouseOver","onFocus","markerHeight","death","deathNum","Number","height","undefined","markerWidth","imgSrc","src","map","country","idx","key","latitude","latlng","longitude","offsetTop","offsetLeft","deaths","width","alt","countryTerritoryArea","cursor","CountryInformation","onClick","onClose","anchor","className","confirmedCases","listMapData","a","fetch","response","status","json","Error","statusText","Map","useState","mapData","setMapData","zoom","viewport","setViewport","selectedCountryRegion","setSelectedCountryRegion","openPopup","useEffect","localStorage","setItem","JSON","stringify","parse","getItem","mapStyle","onViewportChange","mapboxApiAccessToken","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8090e8f.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  GeolocateControl, NavigationControl, FullscreenControl, ScaleControl,\n} from 'react-map-gl';\n\nconst MapControls = () => {\n  const geolocateControlStyle = {\n    position: 'absolute', top: 0, left: 0, margin: 10,\n  };\n\n  const fullscreenControlStyle = {\n    position: 'absolute', top: 36, left: 0, padding: '10px',\n  };\n\n  const navicationControlStype = {\n    position: 'absolute', top: 72, left: 0, padding: '10px',\n  };\n\n  const scaleControlStyle = {\n    position: 'absolute', bottom: 72, left: 0, padding: '10px',\n  };\n\n  return (\n\n    <>\n      <div style={geolocateControlStyle}>\n        <GeolocateControl\n          positionOptions={{ enableHighAccuracy: true, timeout: 30000 }}\n          trackUserLocation\n          fitBoundsOptions={{ maxZoom: 10 }}\n        />\n      </div>\n\n      <div style={fullscreenControlStyle}>\n        <FullscreenControl />\n      </div>\n\n      <div style={navicationControlStype}>\n        <NavigationControl />\n      </div>\n\n      <div style={scaleControlStyle}>\n        <ScaleControl />\n      </div>\n    </>\n\n  );\n};\n\nexport default MapControls;\n","import React from 'react';\n\nimport { Marker } from 'react-map-gl';\n\nconst Markers = ({\n  data, onMouseOver, onFocus,\n}) => {\n  // console.log(data);\n  const markerHeight = (death) => {\n    const deathNum = Number(death);\n    let height = '20';\n    if (deathNum === null || deathNum === undefined) {\n      height = '20';\n    }\n    if (deathNum === 0 && deathNum <= 9) {\n      height = '20';\n      // return height;\n    }\n    if (deathNum > 9 && deathNum <= 27) {\n      height = '21';\n      // return height;\n    }\n    if (deathNum > 27 && deathNum <= 54) {\n      height = '24';\n      // return height;\n    }\n    if (deathNum > 54 && deathNum <= 81) {\n      height = '27';\n      // return height;\n    }\n    if (deathNum > 81 && deathNum <= 108) {\n      height = '30';\n      // return height;\n    }\n    if (deathNum > 108 && deathNum <= 135) {\n      height = '33';\n      // return height;\n    }\n    if (deathNum > 135 && deathNum <= 162) {\n      height = '36';\n      // return height;\n    }\n    if (deathNum > 162 && deathNum <= 189) {\n      height = '39';\n      // return height;\n    }\n    if (deathNum > 189 && deathNum <= 216) {\n      height = '42';\n      // return height;\n    }\n    if (deathNum > 216 && deathNum <= 500) {\n      height = '45';\n      // return height;\n    }\n    if (deathNum > 500 && deathNum <= 1000) {\n      height = '48';\n      // return height;\n    }\n    if (deathNum > 1000 && deathNum <= 10000) {\n      height = '57';\n      // return height;\n    }\n    if (deathNum > 10000) {\n      height = '63';\n      // return height;\n    }\n    return height;\n  };\n  const markerWidth = (death) => {\n    const deathNum = Number(death);\n    let height = '14';\n    if (deathNum === null || deathNum === undefined) {\n      height = '14';\n    }\n    if (deathNum === 0 && deathNum <= 9) {\n      height = '14';\n      // return height;\n    }\n    if (deathNum > 9 && deathNum <= 27) {\n      height = '21';\n      // return height;\n    }\n    if (deathNum > 27 && deathNum <= 54) {\n      height = '24';\n      // return height;\n    }\n    if (deathNum > 54 && deathNum <= 81) {\n      height = '27';\n      // return height;\n    }\n    if (deathNum > 81 && deathNum <= 108) {\n      height = '30';\n      // return height;\n    }\n    if (deathNum > 108 && deathNum <= 135) {\n      height = '33';\n      // return height;\n    }\n    if (deathNum > 135 && deathNum <= 162) {\n      height = '36';\n      // return height;\n    }\n    if (deathNum > 162 && deathNum <= 189) {\n      height = '39';\n      // return height;\n    }\n    if (deathNum > 189 && deathNum <= 216) {\n      height = '42';\n      // return height;\n    }\n    if (deathNum > 216 && deathNum <= 500) {\n      height = '45';\n      // return height;\n    }\n    if (deathNum > 500 && deathNum <= 1000) {\n      height = '48';\n      // return height;\n    }\n    if (deathNum > 1000 && deathNum <= 10000) {\n      height = '57';\n      // return height;\n    }\n    if (deathNum > 10000) {\n      height = '63';\n      // return height;\n    }\n    return height;\n  };\n  const imgSrc = (death) => {\n    const deathNum = Number(death);\n    let src = 'lightmarker.png';\n    if (deathNum === null || deathNum === undefined) {\n      src = 'lightmarker.png';\n    }\n    if (deathNum === 0 && deathNum <= 9) {\n      src = 'lightmarker.png';\n      // return height;\n    }\n    if (deathNum > 9 && deathNum <= 54) {\n      src = 'pin.png';\n      // return height;\n    }\n    if (deathNum > 54) {\n      src = 'pin.png';\n      // return height;\n    }\n    return src;\n  };\n  return (\n    data.map((country, idx) => (\n      <Marker\n        // eslint-disable-next-line react/no-array-index-key\n        key={idx}\n        latitude={country.latlng[0]}\n        longitude={country.latlng[1]}\n        offsetTop={-20}\n        offsetLeft={-10}\n      >\n        <img\n          src={imgSrc(country.deaths)}\n          height={markerHeight(country.deaths)}\n          width={markerWidth(country.deaths)}\n          alt={country.countryTerritoryArea}\n          style={{ cursor: 'pointer' }}\n          // onClick={() => { onClick(country); }}\n          onMouseOver={() => { onMouseOver(country); }}\n          onFocus={() => { onFocus(country); }}\n        />\n      </Marker>\n    ))\n\n  );\n};\n\nexport default Markers;\n","import React from 'react';\n\nimport { Popup } from 'react-map-gl';\n\nconst CountryInformation = ({country, onClick}) => {\n\n  return (\n\n    country ? (\n      <Popup\n        latitude={country.latlng[0]}\n        longitude={country.latlng[1]}\n        onClose={onClick}\n        anchor=\"bottom\"\n        offsetLeft={8}\n        offsetTop={-8}>\n        <div>\n          <h2>\n            {country.countryTerritoryArea}\n          </h2>\n          <table className=\"country-region-statistics\">\n            <tbody>\n              <tr>\n                <th>Confirmed cases:</th>\n                <td>{country.confirmedCases}</td>\n              </tr>\n              <tr>\n                <th>Deaths:</th>\n                <td>{country.deaths}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Popup>\n    ) : null\n  );\n};\n\nexport default CountryInformation;\n","const listMapData = async () => {\n  const response = await fetch('https://secret-beach-58222.herokuapp.com/map-data');\n\n  if (response.status >= 200 && response.status < 300) {\n    return response.json();\n  }\n\n  throw new Error(response.statusText);\n};\n\nexport default listMapData;\n","import React, { useState, useEffect } from 'react';\n\nimport ReactMapGL from 'react-map-gl';\n\nimport MapControls from './MapControls';\nimport Markers from './Markers';\nimport CountryInformation from './CountryInformation';\n\nimport listMapData from '../services/MapService';\n\nconst Map = () => {\n  const [mapData, setMapData] = useState([]);\n\n  const [viewport, setViewport] = useState({\n    zoom: 1.9,\n  });\n\n  const [selectedCountryRegion, setSelectedCountryRegion] = useState(null);\n\n  const openPopup = (country) => {\n    setSelectedCountryRegion(country);\n  };\n\n  const closePopup = () => {\n    setSelectedCountryRegion(null);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await listMapData();\n        setMapData(data);\n        localStorage.setItem('mapData', JSON.stringify(data));\n      } catch (error) {\n        setMapData(JSON.parse(localStorage.getItem('mapData')));\n      }\n    })();\n  }, []);\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      width=\"100vw\"\n      height=\"100vh\"\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      maxZoom={10}\n      onViewportChange={setViewport}\n      mapboxApiAccessToken=\"pk.eyJ1Ijoicm9zaGFua3VuMDkiLCJhIjoiY2s3b203YTR5MDhqdzNlcHBrbG5qMjhmciJ9.H_ZpfzDQrCRYIs_rmX73eg\"\n    >\n\n      <MapControls />\n\n      <Markers data={mapData} onClick={openPopup} onMouseOver={openPopup} onFocus={openPopup} />\n\n      <CountryInformation country={selectedCountryRegion} onClick={closePopup} />\n\n    </ReactMapGL>\n  );\n};\n\nexport default Map;\n","import React from 'react';\n\nimport Map from './components/Map';\n\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <Map />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}